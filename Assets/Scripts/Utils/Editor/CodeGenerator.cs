using System;
using System.IO;
using System.Linq;
using UnityEditor;
using UnityEditorInternal;
using UnityEngine;

public class CodeGenerator
{
	static string[] tags => InternalEditorUtility.tags;
	static string[] layers => InternalEditorUtility.layers;

	public static void GenerateCode(Type[] orbTypes)
	{
		string fileContents = string.Empty;
		fileContents +=
			@"
using System.Collections;
using System.Collections.Generic;
using System;
//------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// </auto-generated>
//------------------------------------------------------------------------------

/// <summary>
/// Generates a safe wrapper for Tags.
/// </summary>

public static class Tags
{
";
		foreach (var tag in tags)
		{
			fileContents += $"\tpublic static readonly string {tag} = \"{tag}\";\n"; 
		}
		fileContents += @"
}

public enum Layers
{
";
		foreach (var tag in layers)
		{
			fileContents += $"\t{tag.Replace(" ","")} = 0,\n";
		}
		fileContents += @"
}";
		var outputPath = Path.Combine(Application.dataPath, "Scripts", "Utils", "GeneratedCode.cs");
		try
		{
			if (File.Exists(outputPath + ".bak")) File.Delete(outputPath + ".bak");
			if (File.Exists(outputPath)) File.Copy(outputPath, outputPath + ".bak");
			// Save new class to assets folder.
			File.WriteAllText(outputPath, fileContents);
			// Refresh assets.
			//AssetDatabase.Refresh();
		}
		catch (Exception e)
		{
			Debug.Log("An error occurred while saving file: " + e);
		}
	}
}